version: "3.9"
services:
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    environment:
      TZ: ${TZ}
      user: 1026:100
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8096' || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    volumes:
      - ${DOCKER_DIR_PREFIX}/jellyfin/config:/config:rw
      - ${DOCKER_DIR_PREFIX}/jellyfin/cache:/cache:rw
      - ${DOCKER_DIR_PREFIX}/jellyfin/logs:/logs:rw
      - ${DIR_PREFIX}/TV and Movies:/media:rw
      - ${DIR_PREFIX}/Music:/music:rw
    restart: on-failure:5
    networks:
      - traefik
    ports:
      - 8096:8096
    labels:
      # The labels are usefull for Traefik only
      - traefik.enable=true
      - traefik.docker.network=traefik
      # Get the routes from https
      - traefik.http.routers.jellyfin-secure.rule=Host(`jellyfin.lan`)
      - traefik.http.routers.jellyfin-secure.entrypoints=websecure
      # Specify the service name and the service loadbalancer port
      - traefik.http.routers.jellyfin-secure.service=jellyfin-service
      - traefik.http.services.jellyfin-service.loadbalancer.server.port=8096
      # Apply autentificiation with http challenge
      - traefik.http.routers.jellyfin-secure.tls.certresolver=lets-encr
      # Get the routes from http
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.lan`)
      - traefik.http.routers.jellyfin.entrypoints=web
      # Redirect these routes to https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.jellyfin.middlewares=redirect-to-https@docker

networks:
  traefik:
    external: true