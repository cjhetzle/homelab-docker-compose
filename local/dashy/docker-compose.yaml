version: '3.9'
services:
 dashy:
    image: lissy93/dashy:latest
    container_name: dashy
    restart: on-failure:5
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      UID: 1026
      GID: 100
      LOG_OUTPUT: stdout
      #NODE_ENV: production
      VUE_APP_USER_PASSWORD: ${DASHY_USER_PASSWORD}
    volumes:
      - ${DOCKER_DIR_PREFIX}/dashy/dashyconf.yml:/app/user-data/conf.yml
      - ${DOCKER_DIR_PREFIX}/dashy/icons:/app/user-data/item-icons:rw
    networks:
      - traefik
    ports:
      - 7444:8080
    labels:
      # The labels are usefull for Traefik only
      - traefik.enable=true
      - traefik.docker.network=traefik
      # Get the routes from https
      - traefik.http.routers.dashy-secure.rule=Host(`home.lan`) || Host(`yakho.me`)
      - traefik.http.routers.dashy-secure.entrypoints=websecure
      # Specify the service name and the service loadbalancer port
      - traefik.http.routers.dashy-secure.service=dashy-service
      - traefik.http.services.dashy-service.loadbalancer.server.port=8080
      # Apply autentificiation with http challenge
      - traefik.http.routers.dashy-secure.tls.certresolver=lets-encr
      # Get the routes from http
      - traefik.http.routers.dashy.rule=Host(`home.lan`) || Host(`yakho.me`)
      - traefik.http.routers.dashy.entrypoints=web
      # Redirect these routes to https
      - traefik.http.routers.dashy.middlewares=redirect-to-https@file

networks:
  traefik:
    external: true

