version: "3.9"
services:
  pihole:
    image: pihole/pihole:latest
    container_name: pi-hole
    mem_limit: 2g
    cpu_shares: 768
    security_opt:
      - no-new-privileges:false
    restart: on-failure:5
    network_mode: host
    cap_add:
      - NET_ADMIN
      - CAP_SYS_TIME
    volumes:
      - ${DOCKER_DIR_PREFIX}/pihole/dnsmasq.d:/etc/dnsmasq.d:rw
      - ${DOCKER_DIR_PREFIX}/pihole/pihole:/etc/pihole:rw
      - ${DOCKER_DIR_PREFIX}/pihole/lighttpd:/etc/lighttpd
    environment:
      WEBPASSWORD: ${PH_WEB_PASSWORD}
      WEB_BIND_ADDR: ${PH_WEB_ADDRESS}
      ServerIP: ${PH_WEB_ADDRESS}
      TZ: ${TZ}
      DNSMASQ_USER: ${PH_DNSMASQ_USER}
      DNSMASQ_LISTENING: ${PH_DNSMASQ_LISTENING}
    labels:
      # The labels are usefull for Traefik only
      - traefik.enable=true
      # Get the routes from https
      - traefik.http.routers.pihole-secure.rule=Host(`pihole.local`)
      - traefik.http.routers.pihole-secure.entrypoints=websecure
      # Specify the service name and the service loadbalancer port
      - traefik.http.routers.pihole-secure.service=pihole-service
      - traefik.http.services.pihole-service.loadbalancer.server.port=8081
      # Apply autentificiation with http challenge
      #- traefik.http.routers.pihole-secure.tls.certresolver=lets-encr
      - traefik.http.routers.pihole-secure.tls.options=default
      # Get the routes from http
      - traefik.http.routers.pihole.rule=Host(`pihole.local`)
      - traefik.http.routers.pihole.entrypoints=web
      # Redirect these routes to https
      - traefik.http.routers.pihole.middlewares=redirect-to-https@file