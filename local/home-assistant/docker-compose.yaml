services:
  home-assistant:
    container_name: home-assistant
    environment:
      - TZ=${TZ}
    volumes:
      - ${DOCKER_DIR_PREFIX}/homeassistant:/config
    restart: always
    image: homeassistant/home-assistant
    network_mode: host
    labels:
      # The labels are usefull for Traefik only
      - traefik.enable=true
      # Get the routes from https
      - traefik.http.routers.homeassistant-secure.rule=Host(`homeassistant.lan`) || Host(`ha.yakho.me`)
      - traefik.http.routers.homeassistant-secure.entrypoints=websecure
      # Specify the service name and the service loadbalancer port
      - traefik.http.routers.homeassistant-secure.service=homeassistant-service
      - traefik.http.services.homeassistant-service.loadbalancer.server.port=8123
      # Specify the service name and the service loadbalancer port
      - traefik.http.routers.homeassistant.service=homeassistant-service
      # Apply autentificiation with http challenge
      - traefik.http.routers.homeassistant-secure.tls.certresolver=lets-encr
      - traefik.http.routers.homeassistant-secure.tls.domains[0].main=ha.yakho.me
      # Get the routes from http
      - traefik.http.routers.homeassistant.rule=Host(`homeassistant.lan`) || Host(`ha.yakho.me`)
      - traefik.http.routers.homeassistant.entrypoints=web
      # Redirect these routes to https
      - traefik.http.routers.homeassistant.middlewares=redirect-to-https@file

  go2rtc:
    image: alexxit/go2rtc
    network_mode: host       # important for WebRTC, HomeKit, UDP cameras
    privileged: true         # only for FFmpeg hardware transcoding
    restart: unless-stopped  # autorestart on fail or config change from WebUI
    environment:
      - TZ=${TZ}  # timezone in logs
    volumes:
      - ${DOCKER_DIR_PREFIX}/go2rtc:/config   # folder for go2rtc.yaml file (edit from WebUI)
